package cn.com.atblue.oa.dao.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import cn.com.atblue.oa.bean.OfficeNoticeCheck;
import cn.com.atblue.oa.dao.OfficeNoticeCheckDAO;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class OfficeNoticeCheckDAOImpl extends SqlMapClientDaoSupport implements OfficeNoticeCheckDAO {

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table OFFICE_NOTICE_CHECK
	 * @ibatorgenerated  Wed Dec 23 09:49:51 CST 2009
	 */
	public OfficeNoticeCheckDAOImpl() {
		super();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table OFFICE_NOTICE_CHECK
	 * @ibatorgenerated  Wed Dec 23 09:49:51 CST 2009
	 */
	public int deleteByPrimaryKey(String checkid) {
		OfficeNoticeCheck key = new OfficeNoticeCheck();
		key.setCheckid(checkid);
		int rows = getSqlMapClientTemplate().delete(
				"OFFICE_NOTICE_CHECK.ibatorgenerated_deleteByPrimaryKey", key);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table OFFICE_NOTICE_CHECK
	 * @ibatorgenerated  Wed Dec 23 09:49:51 CST 2009
	 */
	public void insert(OfficeNoticeCheck record) {
		getSqlMapClientTemplate().insert(
				"OFFICE_NOTICE_CHECK.ibatorgenerated_insert", record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table OFFICE_NOTICE_CHECK
	 * @ibatorgenerated  Wed Dec 23 09:49:51 CST 2009
	 */
	public void insertSelective(OfficeNoticeCheck record) {
		getSqlMapClientTemplate().insert(
				"OFFICE_NOTICE_CHECK.ibatorgenerated_insertSelective", record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table OFFICE_NOTICE_CHECK
	 * @ibatorgenerated  Wed Dec 23 09:49:51 CST 2009
	 */
	public OfficeNoticeCheck selectByPrimaryKey(String checkid) {
		OfficeNoticeCheck key = new OfficeNoticeCheck();
		key.setCheckid(checkid);
		OfficeNoticeCheck record = (OfficeNoticeCheck) getSqlMapClientTemplate()
				.queryForObject(
						"OFFICE_NOTICE_CHECK.ibatorgenerated_selectByPrimaryKey",
						key);
		return record;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table OFFICE_NOTICE_CHECK
	 * @ibatorgenerated  Wed Dec 23 09:49:51 CST 2009
	 */
	public int updateByPrimaryKeySelective(OfficeNoticeCheck record) {
		int rows = getSqlMapClientTemplate()
				.update(
						"OFFICE_NOTICE_CHECK.ibatorgenerated_updateByPrimaryKeySelective",
						record);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table OFFICE_NOTICE_CHECK
	 * @ibatorgenerated  Wed Dec 23 09:49:51 CST 2009
	 */
	public int updateByPrimaryKey(OfficeNoticeCheck record) {
		int rows = getSqlMapClientTemplate().update(
				"OFFICE_NOTICE_CHECK.ibatorgenerated_updateByPrimaryKey",
				record);
		return rows;
	}
	
	public void deleteByNoticeid(String noticeid){
		getSqlMapClientTemplate().delete("OFFICE_NOTICE_CHECK.deleteByNoticeid", noticeid);
	}
	
	public String[] getCheckUsersByNoticeid(String noticeid){
		
		List list = getSqlMapClientTemplate().queryForList("OFFICE_NOTICE_CHECK.getCheckUsersByNoticeid",noticeid);
		String[] _temp = new String[list.size()];
		for (int i = 0; i < list.size(); i++) {
			Map map = (Map)list.get(i);
			String str = (String)map.get("CHECKMAN");
			_temp[i] = str;
		}
		return _temp;
	}

	public List getCheckByNoticeid(String noticeid) {
		return getSqlMapClientTemplate().queryForList("OFFICE_NOTICE_CHECK.getCheckByNoticeid",noticeid);
	}

	public OfficeNoticeCheck getCheckByNoticeidUserid(String userid,String noticeid){
		Map map = new HashMap();
		map.put("userid", userid);
		map.put("noticeid", noticeid);
		List list  =  getSqlMapClientTemplate().queryForList("OFFICE_NOTICE_CHECK.getCheckByNoticeidUserid",map);
		if(list!=null && list.size()>0){
			return (OfficeNoticeCheck)list.get(0);
		}else{
			return null;
		}
	}
}
